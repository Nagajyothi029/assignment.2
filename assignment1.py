# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rRHqlR9VecbokSR5XwpTU7nr_UvdbieY
"""

import matplotlib.pyplot as plt
import math
 
EF, E, F= 7.2, (110/180)*math.pi, (180/180)*math.pi
 
lineLength = 10
 
(x1, x2) = (0, lineLength * math.cos(E))
(y1, y2) = (0, lineLength * math.sin(E))
 
(x3, x4) = (7.2, 7.2-lineLength * math.cos(F))
(y3, y4) = (0, lineLength * math.sin(F))
 
 
def drawTriangle(EF, E, F):
    # drawing EF line of  7.2cm
    plt.plot((0, 7.2), (0, 0))
 
    plt.plot((x1, x2), (y1, y2))
    plt.plot((x3, x4), (y3, y4))
 
    plt.xlabel('x - axis')
    plt.ylabel('y - axis')
    plt.title('Triangle')
    plt.show()
 
 
drawTriangle(EF, E, F)
 
 
def isIntersecting(x1, x2, y1, y2, x3, x4, y3, y4):
    den = (x1-x2)*(y3-y4) - (y1-y2)*(x3-x4)
    if(den == 0):
        return False
    t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / den
    u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / den
    if (not (t > 0 and t < 1 and u > 0)):
        return False
    return True
 
 
output = isIntersecting(x1, x2, y1, y2, x3, x4, y3, y4)
 
if(output):
    print("Both lines are intersecting")
else:
    print("Both lines are not intersecting")